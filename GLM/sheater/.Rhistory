plot(jitter(InMichelin,0.1) ~ jitter(Price,0.1), col="red4",
main="Michelin", ylab="In Michelin", xlab="Price")
newdat  <- data.frame(Price=seq(min(Price), max(Price),len =164))
newdat$michelin.price = predict(michelin.price , newdata=newdat , type="response")
lines(michelin.price ~ Price , newdat , col="green", lwd =2)
legend (150, 0.76,  legend=c("michelin.price"),col=c("green"), lty=1, cex =0.8)
b.0 <- -6.00082
b.1 <- 0.12174
odds.ratio.1 <- exp(b.0 + b.1)
odds.ratio.5 <- exp(b.0 + b.1 * 5)
odds.ratio.1/odds.ratio.5
modelo.full <- glm(InMichelin ~ Food + Decor + Service + Price, family = binomial)
summary(modelo.full)
modelo.food.price <- glm(InMichelin ~ Food + Price , family = binomial)
modelo.food <- glm(InMichelin ~ Food, family = binomial)
G <- -2*(logLik(modelo.food)-logLik(modelo.food.price))
chisq.critico <-qchisq (0.95 ,1)
chisq.critico
G
pchisq(G,1, lower.tail = FALSE)
library(lmtest)
lrtest(modelo.food , modelo.food.price)
library(GLMsData)
data("turbines")
attach(turbines)
# Ejemplo  del  libro  Generalized  Linear  Models  with  examples  in R
mod.hours  <- glm(Fissures/Turbines ~   Hours , data=turbines , family = binomial(link = "probit"))
summary(mod.hours)
b0 =  -2.285492034
b1 = 0.0005897
p = 0.5 # para  buscar  el x que  haga  que la  proporcion  sea  50%
g.p = qnorm(p) # esta es la  funcion  enlace  para  probit
ed50 =   (g.p-b0)/b1 # 3875.686
library(MASS)
dose.p(mod.hours)
m.logit <- glm(InMichelin ~ Food, family = binomial)
m.probit <- glm(InMichelin ~ Food, family = binomial(link = "probit"))
m.cauchit <- glm(InMichelin ~ Food, family = binomial(link = "cauchit"))
m.cloglog <- glm(InMichelin ~ Food, family = binomial(link = "cloglog"))
sum.yi <- sum(InMichelin);
sum.pi.logit <- sum(predict(m.logit, type = "response"))
sum.pi.probit <- sum(predict(m.probit, type = "response"))
sum.pi.cauchit <- sum(predict(m.cauchit, type = "response"))
sum.pi.cloglog <- sum(predict(m.cloglog, type = "response"))
tabla <- rbind(sum.yi, sum.pi.logit, sum.pi.probit, sum.pi.cauchit, sum.pi.cloglog)
diferencia <- c(0,abs(sum.pi.logit -sum.yi), abs(sum.pi.probit -sum.yi), abs(sum.pi.cauchit -sum.yi), abs(sum.pi.cloglog -sum.yi))
tabla <- round(cbind(tabla, diferencia),3)
colnames(tabla) <- c("Sumatoria", "Diferencia")
tabla
awards <- read.csv("Awards.csv", header = T, sep=";")
attach(awards)
hist(Awards)
m.awards.score <- glm(Awards ~ Score.Math, family = "poisson")
summary(m.awards.score)
m.awards.score.program <- glm(Awards ~ Score.Math + Program, family="poisson")
summary(m.awards.score.program)
library(ISwR)
data(eba1977)
attach(eba1977)
m.city.age<-glm(cases~ age , offset = log(pop),family=poisson)
summary(m.city.age)
# Para B2 en RR esta daddo por
exp(1.5)
library(ISwR)
data(malaria)
attach(malaria)
malaria.ab <- glm(mal~ab, data=malaria , family = "binomial")
n1 <- sum(mal)
n0 <- sum(1-mal)
B0 <- log(n1/n0) # -0.9946226
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
?logitlink
install.packages("VGAM")
plot(logitlink)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
library(VGAM)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
plot(jitter(InMichelin,0.1) ~ jitter(Price,0.1), col="red4",
main="Michelin", ylab="In Michelin", xlab="Price")
newdat  <- data.frame(Price=seq(min(Price), max(Price),len =164))
newdat$michelin.price = predict(michelin.price , newdata=newdat , type="response")
lines(michelin.price ~ Price , newdat , col="green", lwd =2)
legend (150, 0.76,  legend=c("michelin.price"),col=c("green"), lty=1, cex =0.8)
plot(logitlink)
library(VGAM)
y <- seq(0,1, by = 0.01)
logit <- t(logitlink(y))
probit <- t(logitlink(y))
cauchit <- t(cauchitlink(y))
plot(jitter(InMichelin,0.1) ~ jitter(Price,0.1), col="red4",
main="Michelin", ylab="In Michelin", xlab="Price")
newdat  <- data.frame(Price=seq(min(Price), max(Price),len =164))
newdat$michelin.price = predict(michelin.price , newdata=newdat , type="response")
lines(michelin.price ~ Price , newdat , col="green", lwd =2)
legend (150, 0.76,  legend=c("michelin.price"),col=c("green"), lty=1, cex =0.8)
plot(logitlink)
library(VGAM)
y <- seq(0,1, by = 0.01)
logit <- t(logitlink(y))
probit <- t(logitlink(y))
cauchit <- t(cauchitlink(y))
plot(jitter(InMichelin,0.1) ~ jitter(Price,0.1), col="red4",
main="Michelin", ylab="In Michelin", xlab="Price")
newdat  <- data.frame(Price=seq(min(Price), max(Price),len =164))
newdat$michelin.price = predict(michelin.price , newdata=newdat , type="response")
lines(michelin.price ~ Price , newdat , col="green", lwd =2)
legend (150, 0.76,  legend=c("michelin.price"),col=c("green"), lty=1, cex =0.8)
plot(logitlink)
library(VGAM)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
plot(jitter(InMichelin,0.1) ~ jitter(Price,0.1), col="red4",
main="Michelin", ylab="In Michelin", xlab="Price")
newdat  <- data.frame(Price=seq(min(Price), max(Price),len =164))
newdat$michelin.price = predict(michelin.price , newdata=newdat , type="response")
lines(michelin.price ~ Price , newdat , col="green", lwd =2)
legend (150, 0.76,  legend=c("michelin.price"),col=c("green"), lty=1, cex =0.8)
plot(t(logitlink))
library(VGAM)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
plot(jitter(InMichelin,0.1) ~ jitter(Price,0.1), col="red4",
main="Michelin", ylab="In Michelin", xlab="Price")
newdat  <- data.frame(Price=seq(min(Price), max(Price),len =164))
newdat$michelin.price = predict(michelin.price , newdata=newdat , type="response")
lines(michelin.price ~ Price , newdat , col="green", lwd =2)
legend (150, 0.76,  legend=c("michelin.price"),col=c("green"), lty=1, cex =0.8)
plot(t(logitlink))
plot(t(logitlink))
library(VGAM)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
library(VGAM)
library(dplyr)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
library(VGAM)
library(ggplot2)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
?melt
install.packages("reshape")
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
plot1 <- ggplot(data = graficos, aes(x=value,y, colour = variable) +geom_line(size = 1) + xlim(c(-5,-5) +xlab("Predictor lineal")))
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
plot1 <- ggplot(data = graph, aes(x=value,y, colour = variable) +geom_line(size = 1) + xlim(c(-5,-5) +xlab("Predictor lineal")))
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
plot1 <- ggplot(data = graph, aes(x=value,y, colour = variable) +geom_line(size = 1) + xlim(c(-5,-5)) +xlab("Predictor lineal")))
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
plot1 <- ggplot(data = graph, aes(x=value,y, colour = variable))
+geom_line(size = 1) + xlim(c(-5,-5)) +xlab("Predictor lineal")))
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
plot1 <- ggplot(data = graph, aes(x=value,y, colour = variable))
+geom_line(size = 1) + xlim(c(-5,-5)) +xlab("Predictor lineal")
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
plot1 <- ggplot(data = graph, aes(x=value,y, colour = variable))
+geom_line(size = 1) + xlim(c(-5,-5)) +xlab("Predictor lineal")+
plot1 + theme(panle.background = element_rect(fill = "white"))
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
plot1 <- ggplot(data = graph, aes(x=value,y, colour = variable))
+geom_line(size = 1) + xlim(c(-5,-5)) +xlab("Predictor lineal") +
plot1 + theme(panle.background = element_rect(fill = "white"))
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
plot1 <- ggplot(data = graph, aes(x=value,y, colour = variable))
+ geom_line(size = 1) + xlim(c(-5,-5)) +xlab("Predictor lineal") +
plot1 + theme(panle.background = element_rect(fill = "white"))
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
plot1 <- ggplot(data = graph, aes(x=value,y, colour = variable))
+ geom_line(size = 1) + xlim(c(-5,-5)) +xlab("Predictor lineal")
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
ggplot(data = graficos,aes(x=x,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Transformacion")
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
ggplot(data = graph,aes(x=x,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Transformacion")
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
ggplot(data = graph,aes(x=value,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Transformacion")
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
ggplot(data = graph,aes(x=value,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Transformacion")
library(VGAM)
library(ggplot2)
library(reshape)
x<-seq(0.01, 0.99, by = 0.01)
y_logit<-logitlink(x)
y_probit<-probitlink(x)
y_cloglog<-clogloglink(x)
y_cauchy<-cauchitlink(x)
graficos<-data.frame(x,y_logit,y_probit,y_cloglog,y_cauchy)
graficos<-melt(graficos,id="x")
ggplot(data = graficos,aes(x=x,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Transformacion")
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
ggplot(data = graficos,aes(x=x,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Transformacion")
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
ggplot(data = graficos,aes(x=x,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Predictor Lineal")
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
ggplot(data = graficos,aes(x=x,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Predictor Lineal")
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
ggplot(data = graficos,aes(x=x,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Predictor Lineal")
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
ggplot(data = graph,aes(x=x,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Predictor Lineal")
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
ggplot(data = graph,aes(x=x,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Predictor Lineal")
library(VGAM)
library(ggplot2)
library(reshape)
y <- seq(0,1, by = 0.01)
logit <- logitlink(y)
probit <- logitlink(y)
cauchit <- cauchitlink(y)
graph <- data.frame(y,logit,probit,cauchit)
graph <- melt(graph, id="y")
ggplot(data = graph,aes(x=x,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Predictor Lineal")
library(VGAM)
library(ggplot2)
library(reshape)
x<-seq(0.01, 0.99, by = 0.01)
logit<-logitlink(x)
probit<-probitlink(x)
cauchit<-cauchitlink(x)
graficos<-data.frame(x,y_logit,y_probit,y_cloglog,cauchit)
graficos<-melt(graficos,id="x")
ggplot(data = graficos,aes(x=x,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Predictor Lineal")
library(VGAM)
library(ggplot2)
library(reshape)
x<-seq(0.01, 0.99, by = 0.01)
logit<-logitlink(x)
probit<-probitlink(x)
cauchit<-cauchitlink(x)
graficos<-data.frame(x,y_logit,y_probit,cauchit)
graficos<-melt(graficos,id="x")
ggplot(data = graficos,aes(x=x,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Predictor Lineal")
library(VGAM)
library(ggplot2)
library(reshape)
x<-seq(0.01, 0.99, by = 0.01)
logit<-logitlink(x)
probit<-probitlink(x)
cauchit<-cauchitlink(x)
graficos<-data.frame(x,logit,probit,cauchit)
graficos<-melt(graficos,id="x")
ggplot(data = graficos,aes(x=x,y=value,colour=variable))+geom_line(size=1)+ylim(c(-5,5))+ylab("Predictor Lineal")
n <- nrow(mal)
n
nrow(malaria)
malaria
library(ISwR)
data(malaria)
attach(malaria)
malaria.ab <- glm(mal~ab, data=malaria , family = "binomial")
n1 <- sum(mal)
n0 <- sum(1-mal)
B0 <- log(n1/n0) # -0.9946226
n <- nrow(malaria)
pi_null <- n1/n
a <- (n1/n)*n1
b <- (n0/n)*n0
ll_null <- log(a*b)
library(ISwR)
data(malaria)
attach(malaria)
malaria.ab <- glm(mal~ab, data=malaria , family = "binomial")
n1 <- sum(mal)
n0 <- sum(1-mal)
B0 <- log(n1/n0) # -0.9946226
n <- nrow(malaria)
pi_null <- n1/n
a <- (n1/n)*n1
b <- (n0/n)*n0
ll_null <- log(a*b)
rbind(Bo,pi_null,ll_null)
library(ISwR)
data(malaria)
attach(malaria)
malaria.ab <- glm(mal~ab, data=malaria , family = "binomial")
n1 <- sum(mal)
n0 <- sum(1-mal)
B0 <- log(n1/n0) # -0.9946226
n <- nrow(malaria)
pi_null <- n1/n
a <- (n1/n)*n1
b <- (n0/n)*n0
ll_null <- log(a*b)
table <- rbind(Bo,pi_null,ll_null)
names(table) <- c("Datos")
library(ISwR)
data(malaria)
attach(malaria)
malaria.ab <- glm(mal~ab, data=malaria , family = "binomial")
n1 <- sum(mal)
n0 <- sum(1-mal)
B0 <- log(n1/n0) # -0.9946226
n <- nrow(malaria)
pi_null <- n1/n
a <- (n1/n)*n1
b <- (n0/n)*n0
ll_null <- log(a*b)
table <- rbind(Bo,pi_null,ll_null)
names(table) <- c("Datos")
table
library(ISwR)
data(malaria)
attach(malaria)
malaria.ab <- glm(mal~ab, data=malaria , family = "binomial")
n1 <- sum(mal)
n0 <- sum(1-mal)
B0 <- log(n1/n0) # -0.9946226
n <- nrow(malaria)
pi_null <- n1/n
a <- (n1/n)*n1
b <- (n0/n)*n0
ll_null <- log(a*b)
table <- rbind(Bo,pi_null,ll_null)
colnames(table) <- c("Datos")
table
library(ISwR)
data(malaria)
attach(malaria)
malaria.ab <- glm(mal~ab, data=malaria , family = "binomial")
n1 <- sum(mal)
n0 <- sum(1-mal)
B0 <- log(n1/n0) # -0.9946226
n <- nrow(malaria)´# 100
library(ISwR)
data(malaria)
attach(malaria)
malaria.ab <- glm(mal~ab, data=malaria , family = "binomial")
n1 <- sum(mal)
n0 <- sum(1-mal)
B0 <- log(n1/n0) # -0.9946226
n <- nrow(malaria)# 100
pi_null <- n1/n
a <- (n1/n)^n1
b <- (n0/n)^n0
ll_null <- log(a*b)
table <- rbind(Bo,pi_null,ll_null)
colnames(table) <- c("Datos")
table
a
b
ll_null
